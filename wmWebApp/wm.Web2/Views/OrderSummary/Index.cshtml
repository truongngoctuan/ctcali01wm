@model wm.Service.Model.SummarizeMainKitchenOrderViewModel

@{
    ViewBag.Title = "ManagerDetailsOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>


<div class="col-md-12">
    <div id="dtpicker01" class="col-md-3"></div>
    <div class="col-md-9">
        <div class="form-group">
            <button onclick="ToPdf()" class="btn btn-primary">Get Pdf</button>
        </div>
    </div>
</div>

<div class="col-md-12">
    <button class="btn btn-primary" onclick="updateSummary()">Update summary</button>
    <div class="form-group col-md-12">
        <div id="hsIncludeExclude" class=""></div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function ToPdf() {
            window.location.href = '@Url.Action("SummaryMainKitchenOrderToPdf", "OrderSummary")' + '?date=' + getDateFromDatePicker();
        }

        function updateSummary() {
            loadIncludeExclude();
        }

        //================================================================================
        //helper
        function postHelper(href, dataObject, onSuccessCallback) {
            $.ajax({
                url: href,
                data: dataObject,
                cache: false,
                type: "POST",
                dataType: "html",
                success: onSuccessCallback
            });
        }

        //================================================================================

        var $$ = function(id) {
                return document.getElementById(id);
            },
            container = $$('hsIncludeExclude'),
            autosave = $$('autosave'),
            load = $$('load'),
            save = $$('save'),
            autosaveNotification,
            hot,
            dataInput,
            colHeaderPreDefine,
            rowHeaderPreDefine,
            columnsPreDefine;

        var dtpicker01 = $('#dtpicker01'),
            getDateFromDatePicker = function() {
                return moment(dtpicker01.datepicker("getUTCDate")).format("YYYY-MM-DD");
            }
        
        $(document).ready(function() {

            $('#dtpicker01').datepicker({
                todayBtn: "linked",
                language: "vi",
                keyboardNavigation: false,
                todayHighlight: true
            }).datepicker("setDate", "0");

            console.log(getDateFromDatePicker());

            //build colHeader
            var branches = @Html.Raw(Json.Encode(ViewBag.branches)); //Name only
            colHeaderPreDefine = [''];
            for (var i = 0; i < branches.length; i++) {
                colHeaderPreDefine.push(branches[i].Name);
            }

            colHeaderPreDefine.push('Total');

            //build columns
            columnsPreDefine = [{ data: 0, readOnly: true, type: 'text' }];
            for (var i = 0; i < branches.length; i++) {
                columnsPreDefine.push({ data: i + 1, readOnly: true, type: 'numeric', format: '0,0.00' });
            }
            columnsPreDefine.push({ data: branches.length + 1, readOnly: true, type: 'text' });

            //build rowHeaders
            var goods = @Html.Raw(Json.Encode(ViewBag.goods)); //Name only
            rowHeaderPreDefine = [];
            for (var i = 0; i < goods.length; i++) {
                rowHeaderPreDefine.push(goods[i].Name);
            }

            hot = new Handsontable(container, {
                startRows: 1,
                startCols: 2,
                allowInvalid: false,
                rowHeaders: true,
                colHeaders: colHeaderPreDefine,
                //dataSchema: { Id: null, Name: null, RecommendedQuantity: null, Quantity: null },
                columns: columnsPreDefine
                //TODO: readonly columns
            });

            loadIncludeExclude();


        });

        function loadIncludeExclude() {

            postHelper('@Url.Action("SummaryMainKitchenOrder")', { date: getDateFromDatePicker() },
                function(data) {
                    dataInput = JSON.parse(data);
                    dataInput2 = [];
                    for (var i = 0; i < dataInput.length; i++) {
                        var tempData = [];
                        tempData.push(rowHeaderPreDefine[i]);
                        var total = 0;
                        for (var j = 0; j < dataInput[i].length; j++) {
                            tempData.push(dataInput[i][j]);
                            total += dataInput[i][j];
                        }
                        tempData.push(total);
                        dataInput2.push(tempData);
                    }
                    hot.loadData(dataInput2);

                });
        }
    </script>
}
