@model wm.Model.MultiPurposeList

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

<div class="col-md-6 col-xs-12">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>GoodCategory</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>


<div class="col-md-6 col-xs-12">
    <h4>Update good categories</h4>
    <hr />
    <div class="row form-group col-md-10 col-md-offset-2">
        @if (ViewBag.isInEx == true)
        {
            <input type="checkbox" id="cbSwitchToOrder" />
        }
        else
        {
            <input type="checkbox" id="cbSwitchToOrder" checked="checked" />
        }
        Enable sort
    </div>



    <div id="groupIncludeExclude">
        <div class="form-group row col-md-10 col-md-offset-2"> Check/Uncheck Items</div>
        <div class="col-md-12">
            <table id="example" class="display select" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th><input type="checkbox" name="select-all" value="1"></th>
                        @*<th>AccountantCode</th>*@
                        <th>Id</th>
                        <th>Name</th>
                        @*<th>UnitName</th>*@
                        @*<th>GoodType</th>*@
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th></th>
                        @*<th>AccountantCode</th>*@
                        <th>Id</th>
                        <th>Name</th>
                        @*<th>UnitName</th>
                            <th>GoodType</th>*@
                    </tr>
                </tfoot>
            </table>
            <button onclick="saveIncludeExclude2()">Save</button>
        </div>
    </div>
    <div id="groupOrder">
        <div class="form-group row col-md-10 col-md-offset-2"> Sort Items</div>
        <div class="form-group row col-md-10 col-md-offset-2">
            <div id="hsOrder" class=""></div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button name="save" id="save" class="btn btn-danger" onclick="saveOrder()">Save</button>
            </div>
        </div>
    </div>


</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/NNToNNModule.js"></script>
    <script>
        var table;
        $(document).ready(function() {
            window.tableNN = new NNToNN(@Model.Id, "@Url.Action("List")", "@Url.Action("IncludeExcludeNnData")", "#example");

        });

        function saveIncludeExclude2() {
            window.tableNN.Save();
        }
    </script>
    <script>
        //================================================================================
        //helper
        function postHelper(href, dataObject, onSuccessCallback) {
            $.ajax({
                url: href,
                data: dataObject,
                cache: false,
                type: "POST",
                dataType: "html",
                success: onSuccessCallback
            });
        }

        //================================================================================
        var $$ = function(id) {
            return document.getElementById(id);
        },
            container = $$('hsIncludeExclude'),
            containerOrder = $$('hsOrder'),
            autosave = $$('autosave'),
            load = $$('load'),
            save = $$('save'),
            autosaveNotification,
            hot,
            hotOrder,
            dataInput,
            dataInputOrder;

        function cbSwitchToOrderFunction(obj) {
            var $this = $(obj);
            // $this will contain a reference to the checkbox
            if ($this.is(':checked')) {
                // the checkbox was checked
                //load ordering
                $("#groupIncludeExclude").hide();
                $("#groupOrder").show();
                loadOrder();
            } else {
                // the checkbox was unchecked
                //load include/exclude
                $("#groupIncludeExclude").show();
                $("#groupOrder").hide();
                //window.tableNN.loadIncludeExclude2();
                window.tableNN.init();
            }
        }

        $(document).ready(function() {
            cbSwitchToOrderFunction($('#cbSwitchToOrder'));
        });

        //switch
        $('#cbSwitchToOrder').click(function() {
            cbSwitchToOrderFunction(this);
        });

        function loadIncludeExclude() {
            postHelper('@Url.Action("PopulateData")', { id: @Model.Id, isInEx: true },
                function(data, textStatus, XMLHttpRequest) {
                    console.log("client received: " + data);

                    dataInput = JSON.parse(data);
                    hot.loadData(dataInput);

                });
        }

        //================================================================================
        function SortByRanking(a, b) {
            var aName = a.Ranking;
            var bName = b.Ranking;
            return ((aName < bName) ? -1 : ((aName > bName) ? 1 : 0));
        }

        hotOrder = new Handsontable(containerOrder, {
            startRows: 1,
            startCols: 2,
            rowHeaders: true,
            colHeaders: false,
            manualRowMove: true,
            dataSchema: { Id: null, Name: null, RecommendedQuantity: null, Quantity: null },
            columns: [
//TODO: change colorbackground for readonly
                //{ Data: 'CategoryId', readOnly: true },
                { data: 'Name', readOnly: true },
                { data: 'Ranking', readOnly: true },
                //{ Data: 'IsChecked', type: 'checkbox' },
            ],
            afterRowMove: function(startRow, endRow) {
                if (startRow > endRow) {
                    dataInputOrder[startRow].Ranking = dataInputOrder[endRow].Ranking;
                    for (var i = endRow; i <= startRow - 1; i++) {
                        dataInputOrder[i].Ranking++;
                    }
                } else {
                    dataInputOrder[startRow].Ranking = dataInputOrder[endRow].Ranking;
                    for (var i = startRow + 1; i <= endRow; i++) {
                        dataInputOrder[i].Ranking--;
                    }
                }
                dataInputOrder.sort(SortByRanking);
                console.log("Move row: " + startRow + " " + endRow);
            }
        });

        function loadOrder() {
            postHelper('@Url.Action("PopulateData")', { id: @Model.Id, isInEx: false },
                function(data, textStatus, XMLHttpRequest) {
                    console.log("client received: " + data);

                    dataInputOrder = JSON.parse(data);
                    hotOrder.loadData(dataInputOrder);

                });
        }

        function saveOrder() {
            console.log("local Data: " + JSON.stringify({ data: dataInputOrder }));

            postHelper('@Url.Action("SortNnData")',
                { id: @Model.Id, data: dataInputOrder },
                function(data, textStatus, XMLHttpRequest) {
                    var dataObject = JSON.parse(data);
                    if (dataObject.Status = "Ok") {
                        location.reload();
                        //window.location.href = '@Url.Action("Edit", new {id = Model.Id, isInEx = false})';
                    } else {
                        console.log("error SortNnData");
                    }
                });
        }


    </script>
}
;